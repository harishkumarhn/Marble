@{
    ViewBag.Title = "printTemplate";
    Layout = null;
}
<table id="marbleTable_printTemplateHeaders" class="stripe row-border order-column" style="width: 100%">
    <thead>
        <tr>
            <th>Template Id</th>
            <th>Template Name</th>
            <th>Font Name</th>
            <th>Font Size</th>
            <th>Preview</th>
            <th>Action</th>            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ViewBag.PrintTemplateHeadersAndItems)
        {  
            <tr>
                <td>
                    <lable> @(item.TemplateId == 0 ? "" : item.TemplateId) </lable>
                </td>
                <td>
                    <input type="text" value="@item.TemplateName" />
                </td>
                <td>
                    <select name="fontName">
                        @foreach (var dow in ViewBag.FontNameList)
                        {
                            if (@item.FontName == @dow)
                            {
                            <option value="@dow" selected style="font-family:@dow">@dow</option>
                            }
                            else
                            {
                            <option value="@dow" style="font-family:@dow">@dow</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    <input type="text" value="@(item.FontSize == 0 ? 8 : @item.FontSize)" />
                </td>
                <td>
                    @*<a class="preview" href="/SiteSetup/PrintPreview?headerId=@item.TemplateId" target="_blank" title="preview" data-toggle="tooltip">*@
                    <a class="preview" onclick="Preview(@item.TemplateId)" title="preview" data-toggle="tooltip">
                        <i class="material-icons print" style="cursor: pointer;margin-left: 22px;">&#xe8ad;</i>
                    </a>
<td>
                    <a class="add" title="add" onclick="addTemplateHeader()" data-toggle="tooltip">
                        <i class="material-icons" style="cursor: pointer;">&#xe145;</i>
                    </a>
                    <a class="delete" title="Delete" data-toggle="tooltip" onclick="DeleteTemplate('@item.TemplateId')">
                        <i class="material-icons" style="cursor: pointer;">&#xE872;</i>
                    </a>
                </td>
            </tr>  
        }
    </tbody>
</table>
<div id="myModal" class="modal fade">
    <div class="modal-dialog modal-centre">
        <div id="modelBody" class="modal-content" style="height: 550px;">
        </div>
    </div>
</div>
<script>
    var table;
    $(document).ready(function () {
         table = $('#marbleTable_printTemplateHeaders').DataTable({
            scrollY: "140px",
            scrollX: true,
            scrollCollapse: true,
            editable: true,
            stateSave: true,
            bPaginate: false,
            bInfo: false,
            bFilter: false,
            bSort: false,
            select: true,
            "createdRow": function (row, data, index) {
                $('td', row).addClass('tblRow');
            },
            rowCallback: function (row, data) {
                var element = $('td', row);
                element.on("change", function (e) {
                    UpdatedList($(this).parent().index());
                });
            }
        });

        $(".tblRow").on("change", function (e) { UpdatedList($(this).parent().index()); });
        $(".tblRow").on("click", function (e) { UpdatePrinterTemplateList($(this).parent().index()); });
        $('#marbleTable_printTemplateHeaders tbody').on('click', 'tr', function () {
            for (var i = 1 ; i <= this.parentElement.rows.length; i++)
            {
                if (i == this.rowIndex) {
                    this.style.backgroundColor = '#d6d9e0';
                    document.getElementById('marbleTable_printTemplate').rows[this.rowIndex].style.backgroundColor = '#d6d9e0';
                } else {
                    this.parentElement.rows[i-1].style.backgroundColor = 'white';
                    document.getElementById('marbleTable_printTemplate').rows[i].style.backgroundColor = 'white'
                }
            }
        });
    });
    function addTemplateHeader() {
        var fontNames = '';
            @foreach (var dow in ViewBag.FontNameList)
        {
            @: fontNames = fontNames + '<option value="" >@dow</option>';
        }
        table.row.add([
                 '<lable></lable>',
                 '<input type="text" value="" />',
                 '<select name="fontNames" id="fontNames">' + fontNames,
                 '<input type="text" value="" />',
                 '<lable></lable>',
                 '<lable></lable>'
        ]).draw(false);
        $(".tblRow").on("click", function (e) {
            UpdatePrinterTemplateList($(this).parent().index());
        });
    }
    var selectedItem = -1;
    function UpdatedList(index) {
        if (!updatedArray.includes(index)) {
            updatedArray.push(index);
        }
    }
    function Preview(index) {
        if (index != selectedItem) {
            var url = '/SiteSetup/PrintPreview?headerId=' + index;
            DisplayPDF("printPreview", url);
        }
    }
    function UpdatePrinterTemplateList(index) {
        //if (index != selectedItem) {
            var id = document.getElementById('marbleTable_printTemplateHeaders').rows[index + 1].cells[0].children[0].innerHTML;
            if (id == null || id == undefined || id.trim() == '') {
                id = '0';
            }
            $('#templateData').load('/SiteSetup/PrintTemplateDataItems?headerId=' + id.trim());
            selectedItem = index;
       // }
    }
    function SavePrintTemplates() {
        var template,templateDateItems = [];
        var table = document.getElementById('marbleTable_printTemplateHeaders');
        var headeTableRowIndex = selectedItem + 1;

        var fixedcolumn1 = $('.DTFC_Cloned lable.fixedCol1');
        var fixedcolumn2 = $('.DTFC_Cloned input.fixedCol2');
        var table_templateItems = document.getElementById('marbleTable_printTemplate');
        var error = false;
        for (var r = 0, n = table_templateItems.rows.length - 1; r < n; r++) {
            if (updatedArray.includes(r)) {
                var rowIndex = r + 1;
                var section_index = $('.DTFC_Cloned')[1].rows[rowIndex].cells[1].children[0].options["selectedIndex"];
                var selectedFontIndex_dataItem = table_templateItems.rows[rowIndex].cells[3].children[0].options["selectedIndex"];
                var Col1Alignment_index = table_templateItems.rows[rowIndex].cells[6].children[0].options["selectedIndex"];
                var Col2Alignment_index = table_templateItems.rows[rowIndex].cells[8].children[0].options["selectedIndex"];
                var Col3Alignment_index = table_templateItems.rows[rowIndex].cells[10].children[0].options["selectedIndex"];
                var Col4Alignment_index = table_templateItems.rows[rowIndex].cells[12].children[0].options["selectedIndex"];
                var Col5Alignment_index = table_templateItems.rows[rowIndex].cells[14].children[0].options["selectedIndex"];
                var length = templateDateItems.length;
                templateDateItems.push({
                    Id:  (fixedcolumn1[r] == undefined) ? '' : fixedcolumn1[r].innerHTML,
                    TemplateId: table.rows[headeTableRowIndex].cells[0].children[0].innerHTML,
                    Section: table_templateItems.rows[rowIndex].cells[1].children[0].options[section_index].innerText,
                    Sequence: table_templateItems.rows[rowIndex].cells[2].children[0].value,
                    FontName: table_templateItems.rows[rowIndex].cells[3].children[0].options[selectedFontIndex_dataItem].innerText,
                    FontSize: table_templateItems.rows[rowIndex].cells[4].children[0].value,
                    Col1Data: table_templateItems.rows[rowIndex].cells[5].children[0].value,
                    Col1Alignment: table_templateItems.rows[rowIndex].cells[6].children[0].options[Col1Alignment_index].innerText,
                    Col2Data: table_templateItems.rows[rowIndex].cells[7].children[0].value,
                    Col2Alignment: table_templateItems.rows[rowIndex].cells[8].children[0].options[Col2Alignment_index].innerText,
                    Col3Data: table_templateItems.rows[rowIndex].cells[9].children[0].value,
                    Col3Alignment: table_templateItems.rows[rowIndex].cells[10].children[0].options[Col3Alignment_index].innerText,
                    Col4Data: table_templateItems.rows[rowIndex].cells[11].children[0].value,
                    Col4Alignment: table_templateItems.rows[rowIndex].cells[12].children[0].options[Col4Alignment_index].innerText,
                    Col5Data: table_templateItems.rows[rowIndex].cells[13].children[0].value,
                    Col5Alignment: table_templateItems.rows[rowIndex].cells[14].children[0].options[Col5Alignment_index].innerText,
                });
                if (templateDateItems[length].Section == 'Select') {
                    error = true;
                    alert('Please select section');
                    templateDateItems.pop();
                }
            }
        }
        if (!error) {
            var selectedFontIndex = table.rows[headeTableRowIndex].cells[2].children[0].options["selectedIndex"];
            var fontName = table.rows[headeTableRowIndex].cells[2].children[0].options[selectedFontIndex].innerText;
            template = {
                TemplateId: table.rows[headeTableRowIndex].cells[0].children[0].innerHTML,
                TemplateName: table.rows[headeTableRowIndex].cells[1].children[0].value,
                FontName: fontName,
                FontSize: table.rows[headeTableRowIndex].cells[3].children[0].value,
                PrintTemplateItems: templateDateItems
            };


            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdatePrintTemplate", "SiteSetup")',
                data: JSON.stringify({ template: template }),
                dataType: "json",
                success: function (data) {
                    notify('success', 'Success Message', 'Data Saved Successfully', () => {
                        $('#tabBody').load('/SiteSetup/printTemplate');
                    });
                },
                error: function (e) {
                    notify('error', 'Error Message', 'Error in server');
                }
            });

        } else { error = false;}
    }
    function DeleteTemplate(id) {
        if (confirm('Are you sure you want to delete this from database?')) {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("DeletePrintTemplate", "SiteSetup")',
                data: { templateId: id, isdataItem: false },
                dataType: "json",
                success: function (data) {
                    $('#tabBody').load('/SiteSetup/printTemplate');
                },
                error: function (e) {
                    alert(e);
                }
            });
        }
    }
</script>
    <div id="templateData">
    </div>

    <div class="action">
        <button class="btn btn-primary btn-md" role="button" onclick="SavePrintTemplates()">Save</button>
        <button id="addRow" class="btn btn-primary btn-md" role="button">Add</button>
        <button class="btn btn-primary btn-md" role="button" onclick="history.back();" id="back">Back</button>
        <button class="btn btn-primary btn-md" role="button" onclick="location.href='/'">Close</button>
</div>

