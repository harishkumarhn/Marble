@{
    ViewBag.Title = "Card Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<link href="~/Content/css/product.css" rel="stylesheet" />*@
<style>

    /* .tblRow > p {
        padding: 0px;
        margin: 0px;
        line-height: 13px;
        font-size: 15px;
        font-weight: 800;
    }*/
</style>

<table id="marbleTable" class="stripe row-border order-column">
    <thead>
    <th>ID</th>
    <th></th>
    <th>Name</th>
    <th>Type</th>
    <th>Category</th>
    <th>MaximumQuantity</th>
    <th>Active</th>
    <th>POS</th>
    <th>Group</th>
    <th>Order</th>
    <th>AGCN</th>
    <th>VIP</th>
    <th>VIPCard</th>
    <th>QTY</th>
    <th>LineRemaksMandatory</th>
    <th>ManagerApprovalRequired</th>
    <th>Price</th>
    <th>FaceValue</th>
    <th>TaxInclusive</th>
    <th>TaxPercent</th>
    <th>Tax</th>
    <th>FinalPrice</th>
    <th>EffectivePrice</th>
    <th>Credits</th>
    <th>Courtesy</th>
    <th>Bonus</th>
    <th>Tickets</th>
    <th>Time</th>
    <th>TicketAllowed</th>
    <th>Discount</th>
    <th>AllowPriceOverride</th>
    <th>CardValidFor(InDays)</th>
    <th>CardExpiryDate</th>
    <th>HSN/SAC Code</th>
    <th>TrxHeaderRemarksReq</th>
    <th>InvokeCustomerReg</th>
    <th>LastUpdatedBy</th>
    <th>LastUpdatedDate</th>
    <th>StartDate</th>
    <th>ExpiryDate</th>
    </thead>
    <tbody>
        @{
            var count = 0;
        }
        @foreach (var item in ViewBag.productDetails)
        {
            count++;
            <tr id="@count">
                <td>
                    <lable class="fixedCol1">@(item.Id == 0 ? "" : item.Id) </lable>
                </td>
                <td>
                    @if (item.Id > 0)
                    {
                        <a class="edit" title="Edit" data-toggle="tooltip" onclick="EditProduct('@item.Id')">
                            <i class="material-icons" style="cursor: pointer;">&#xE254;</i>
                        </a>
                        <a class="delete" title="Delete" data-toggle="tooltip" onclick="DeleteProduct('@item.Id')">
                            <i class="material-icons" style="cursor: pointer;">&#xE872;</i>
                        </a>
                    }
                </td>
                <td>
                    <input type="text" class="fixedCol2" value="@item.Name" style="width: 6vw;" />
                </td>
                <td>
                    <select name="TypeList" id="TypeList">
                        @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["TypeList"])
                        {
                            if (@item.Type == (@dow.Id).ToString())
                            {
                                <option value="@dow.Value" id="@dow.Id" selected>@dow.Value</option>
                            }
                            else
                            {
                                <option value="@dow.Value" id="@dow.Id">@dow.Value</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    <select name="categoryList" id="categoryList">
                        @foreach (var dow in @item.CategoryList)
                        {
                            if (@dow.Id != null && @item.Category == (@dow.Id).ToString())
                            {
                                <option value="@dow.Value" id="@dow.Id" selected>@dow.Value</option>
                            }
                            else
                            {
                                <option value="@dow.Value" id="@dow.Id">@dow.Value</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    <input type="text" value="@item.MaximumQuantity" style="width:6.2vw;" />
                </td>
                <td>
                    <input type="checkbox" @(item.Active ? "checked='checked'" : "") value="@item.Active" />
                </td>
                <td>
                    <input type="checkbox" @(item.DisplayInPOS ? "checked='checked'" : "") value="@item.DisplayInPOS" />
                </td>
                <td>
                    <select name="displayGroupList" id="displayGroupList">
                        @foreach (var dow in (@item.DisplayGroupList))
                        {
                            if (@item.DisplayGroupId == (@dow.Id))
                            {
                                <option value="@dow.Value" id="@dow.Id" selected>@dow.Value</option>
                            }
                            else
                            {
                                <option value="@dow.Value" id="@dow.Id">@dow.Value</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    <input type="number" value="@item.DisplayOrder" />
                </td>
                <td>
                    <input type="checkbox" @(item.AutoGenerateCardNumber ? "checked='checked'" : "") value="@item.AutoGenerateCardNumber" style="width: 2vw;margin-right: 30px;" />
                </td>
                <td>
                    <input type="checkbox" @(item.OnlyVIP ? "checked='checked'" : "") value="@item.OnlyVIP" />
                </td>
                <td>
                    <input type="checkbox" @(item.vipCard ? "checked='checked'" : "") value="@item.vipCard" />
                </td>
                <td>
                    <input type="checkbox" @(item.QuantityPrompt ? "checked='checked'" : "") value="@item.QuantityPrompt" />
                </td>
                <td>
                    <input type="checkbox" @(item.LineRemarksMandatory ? "checked='checked'" : "") value="@item.LineRemarksMandatory" />
                </td>
                <td>
                    <input type="checkbox" @(item.ManagerApprovalRequired ? "checked='checked'" : "") value="@item.ManagerApprovalRequired" />
                </td>
                <td>
                    <input type="text" value="@item.Price" id="Price@(count)" style="width:5vw" />
                </td>
                <td>
                    <input type="text" value="@item.FaceValue" id="FaceValue@(count)" style="width:5vw" />
                </td>
                <td>
                    <input type="checkbox" @(item.TaxInclusive ? "checked='checked'" : "") value="@item.TaxInclusive" id="TaxInclusive@(count)" />
                </td>
                <td>
                    <label type="text" id="TaxPercentage@(count)" style="width:6vw">@item.TaxPercentage</label>
                </td>
                <td>
                    <select name="taxlist" id="taxlist">
                        @foreach (var dow in (List<Marbale.BusinessObject.Tax.TaxSet>)Session["TaxList"])
                        {
                            if (@item.TaxId == (@dow.Id))
                            {
                                <option value="@dow.Value" id="@dow.Id" selected>@dow.Value</option>
                            }
                            else
                            {
                                <option value="@dow.Value" id="@dow.Id">@dow.Value</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    <label id="FinalPrice@(count)" style="width:6vw">@item.FinalPrice</label>
                </td>
                <td>
                    <label id="EffectivePrice@(count)" style="width:6vw">@item.EffectivePrice</label>
                </td>
                <td>
                    <input type="text" value="@(item.Credits != null ? @item.Credits : 0)" />
                </td>
                <td>
                    <input type="text" value="@(item.Courtesy != null ? @item.Courtesy : 0)" />
                </td>
                <td>
                    <input type="text" value="@(item.Bonus != null ? @item.Bonus : 0)" />
                </td>
                <td>
                    <input type="number" value="@item.Tickets" />
                </td>
                <td>
                    <input type="datetime" value="@item.Time" />
                </td>
                <td>
                    <input type="checkbox" @(item.TicketAllowed ? "checked='checked'" : "") value="@item.TicketAllowed" />
                </td>
                <td>
                    <label style="width:6vw">@item.Discount</label>
                </td>
                <td>
                    <input type="checkbox" @(item.AllowPriceOverride ? "checked='checked'" : "") value="@item.AllowPriceOverride" />
                </td>
                <td>
                    <input type="number" value="@item.CardValidFor" />
                </td>
                <td>
                    <input type="datetime" value="@item.CardExpiryDate" />
                </td>
                <td>
                    <input type="text" value="@item.HSNSACCode" />
                </td>
                <td>
                    <input type="checkbox" @(item.TrxHeaderRemarksMandatory ? "checked='checked'" : "") value="@item.TrxHeaderRemarksMandatory" />
                </td>
                <td>
                    <input type="checkbox" @(item.InvokeCustomerRegistration ? "checked='checked'" : "") value="@item.InvokeCustomerRegistration" />
                </td>
                <td>
                    <label>@item.LastUpdatedBy</label>
                </td>
                <td>
                    <p>
                        @(item.LastUpdatedDate != null ? item.LastUpdatedDate.Date.ToString("dd/MM/yyyy") : "")
                    </p>
                    <p>
                        @(item.LastUpdatedDate != null ? item.LastUpdatedDate.ToString("HH:mm:ss") : "")
                    </p>
                    @*<label>@item.LastUpdatedDate</label>*@
                </td>
                <td>
                    <label>@(item.StartDate != null ? item.StartDate.ToString() : "")</label>
                </td>
                <td>
                    <label>@(item.ExpiryDate != null ? item.ExpiryDate.ToString() : "")</label>
                </td>
            </tr>

        }
    </tbody>
</table>
<div class="action">
    <button class="btn btn-primary btn-md" role="button" onclick="event.preventDefault(); history.back();" id="back">Back</button>
    <button class="btn btn-primary btn-md" role="button" onclick="SaveProducts()" id="saveproduct">Save</button>
    <button id="addRow" class="btn btn-primary btn-md" role="button">Add</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" onclick="EditProduct(0)">
        New
    </button>
    <a href="/Marble/index" class="btn btn-primary">Close</a>
</div>
<script>
    var updatedArray = [];
    function UpdatedList(index) {
        if (!updatedArray.includes(index)) {
            updatedArray.push(index);
        }
    }

    $(document).on('change', '#taxlist', function () {
        var rowid = $(this).closest('tr').attr('id');
        var TaxId = $(this).find('option:selected').attr('id');
        //TaxId = $('#taxlist' + rowid + ' option:selected').val();

        var Price = $('#Price' + rowid).val();
        if (Price == "") {
            Price = null;
        }
        var FaceValue = Number($('#FaceValue' + rowid).val());
        taxinclusive = $('#TaxInclusive' + rowid).is(":checked");
        var model = {
            Id: TaxId,
            Price: Price,
            FaceValue: FaceValue,
            TaxInclusive: taxinclusive
        };
        if (TaxId == "") {
            $('#EffectivePrice' + rowid).val(Price);
            $('#FinalPrice' + rowid).val(Price);
        }
            //JSON.stringify({ TaxId: TaxId, Price: Price, TaxInclusive: taxinclusive, FaceValue: FaceValue }),
        else {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("TaxDetails", "Product")',
                data: JSON.stringify({ model: model }),
                dataType: "json",
                success: function (data) {
                    $('#EffectivePrice' + rowid).val(data.EffectivePrice);
                    $('#TaxPercentage' + rowid).val(data.Taxpercent);
                    $('#FinalPrice' + rowid).val(data.FinalPrice);
                },
                error: function (e) {
                    alert(e);
                }
            });
        }
    });
    $(document).ready(function () {
        var table = $('#marbleTable').DataTable({
            scrollY: "400px",
            scrollX: true,
            scrollCollapse: true,
            editable: true,
            stateSave: true,
            // paging: true,
            bPaginate: false,
            bInfo: false,
            bFilter: false,
            bSort: false,
            "createdRow": function (row, data, index) {
                $('td', row).addClass('tblRow');
            },
            rowCallback: function (row, data) {
                var element = $('td', row);
                element.on("change", function (e) {
                    UpdatedList($(this).parent().index());
                });
            },
            order: [[ 0, "desc" ]],
            fixedColumns: {
                leftColumns: 3
            }
        });
        var counter = 1;

        $('#addRow').on('click', function () {
            var fixedcolumn1values = $('.DTFC_Cloned lable.fixedCol1');
            var fixedcolumn3values = $('.DTFC_Cloned input.fixedCol3');

            var typeListOptions = '';
              @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["TypeList"])
              {
                 @: typeListOptions = typeListOptions + '<option id="@dow.Id" value="" >@dow.Value</option>';
                          }
            var taxListOptions = '';
              @foreach (var dow in (List<Marbale.BusinessObject.Tax.TaxSet>)Session["TaxList"])
              {
                 @: taxListOptions = taxListOptions + '<option id="@dow.Id" value="" >@dow.Value</option>';
              }
            taxListOptions = taxListOptions + '</select>';
            var categoryListOptions = '';
              @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["CategoryList"])
              {
                   @: categoryListOptions = categoryListOptions + '<option id="@dow.Id" value="" >@dow.Value</option>';
              }
            categoryListOptions = categoryListOptions + ' </select>';

            var displayGroupListOptions = '';
              @foreach (var dow in (List<Marbale.BusinessObject.IdValue>)Session["DisplayGroupList"])
              {
                   @: displayGroupListOptions = displayGroupListOptions + '<option id="@dow.Id" value="" >@dow.Value</option>';
              }
            displayGroupListOptions = displayGroupListOptions + ' </select>';

            table.row.add([
                '<lable class="fixedCol1"></lable>',
                '',
                '<input class="fixedCol2" type="text" value="" style="width: 6vw;"/>',
                '<select name="TypeList" id="TypeList">' + typeListOptions,
                '<select name="categoryList" id="categoryList">' + categoryListOptions,
                '<input type="text" value="" style="width:6.2vw;"/>',
                '<input type="checkbox" />',
                '<input type="checkbox" />',
                '<select name="displayGroupList" id="displayGroupList">' + displayGroupListOptions,
                '<input type="number" />',
                '<input type="checkbox" style="width: 2vw;margin-right: 30px;"/>',
                '<input type="checkbox" />',
                '<input type="checkbox" />',
                '<input type="checkbox" />',
                '<input type="checkbox" />',
                '<input type="checkbox" />',
                '<input type="text" value="" style="width:5vw"/>',
                '<input type="text" value="" style="width:5vw"/>',
                '<input type="checkbox" />',
                '<label style="width:6vw"></label>',
                '<select name="taxlist" id="taxlist">' + taxListOptions,
                '<label style="width:6vw"></label>',
                '<label style="width:6vw"></label>',
                '<input type="text" />',
                '<input type="text" />',
                '<input type="text" />',
                '<input type="number" />',
                '<input type="datetime" />',
                '<input type="checkbox" />',
                '<label style="width:6vw"></label>',
                '<input type="checkbox" />',
                '<input type="number" />',
                '<input type="datetime" />',
                '<input type="text"/>',
                '<input type="checkbox" />',
                '<input type="checkbox" />',
                '<label></label>',
                '<label></label>',
                '<label></label>',
                '<label></label>',
            ]).draw(false);

            for (var i = 0, j = fixedcolumn1values.length; i < j; i++) {
                $('.DTFC_Cloned lable.fixedCol1')[i].innerHTML = fixedcolumn1values[i].innerHTML;
            }
            for (var i = 0, j = fixedcolumn3values.length; i < j; i++) {
                $('.DTFC_Cloned input.fixedCol2')[i].value = fixedcolumn3values[i].value;
            }
            $(".dataTables_scrollBody").animate({ scrollTop: $(".dataTables_scrollBody").height() }, 1000);
        });
        $(".tblRow").on("change", function (e) { UpdatedList($(this).parent().index()); });
    });
    function SaveProducts() {
        if (updatedArray.length > 0) {
            var items = [];
            var table = document.getElementById('marbleTable');
            var fixedcolumn1 = $('.DTFC_Cloned lable.fixedCol1');
            var fixedcolumn3 = $('.DTFC_Cloned input.fixedCol2');

            for (var r = 0, n = table.rows.length; r < n; r++) {
                if (updatedArray.includes(r)) {
                    var rowIndex = r + 1;
                    if (fixedcolumn3[r].value.trim() == '') {
                        alert('Please Enter Product Name');
                        return false;
                    }
                    if (table.rows[rowIndex].cells[11].children[0].value == '') {
                        alert('Please Enter Price');
                        return false;
                    }
                    var selectedTypeIndex = table.rows[rowIndex].cells[3].children[0].options["selectedIndex"];
                    var selectedCategoryIndex = table.rows[rowIndex].cells[4].children[0].options["selectedIndex"];
                    var selectedDisplayGroupIndex = table.rows[rowIndex].cells[8].children[0].options["selectedIndex"];
                    var selectedTaxIndex = table.rows[rowIndex].cells[20].children[0].options["selectedIndex"];
                    items.push({
                        Id: fixedcolumn1[r].innerHTML,
                        Name: fixedcolumn3[r].value,
                        Type: table.rows[rowIndex].cells[3].children[0].options[selectedTypeIndex].id,
                        Category: table.rows[rowIndex].cells[4].children[0].options[selectedCategoryIndex].id,
                        MaximumQuantity: table.rows[rowIndex].cells[5].children[0].value,
                        Active: table.rows[rowIndex].cells[6].children[0].checked,
                        DisplayInPOS: table.rows[rowIndex].cells[7].children[0].checked,
                        DisplayGroupId: table.rows[rowIndex].cells[8].children[0].options[selectedDisplayGroupIndex].id,
                        DisplayOrder: table.rows[rowIndex].cells[9].children[0].value,
                        AutoGenerateCardNumber: table.rows[rowIndex].cells[10].children[0].checked,
                        OnlyVIP: table.rows[rowIndex].cells[11].children[0].checked,
                        vipCard: table.rows[rowIndex].cells[12].children[0].checked,
                        QuantityPrompt: table.rows[rowIndex].cells[13].children[0].checked,
                        LineRemarksMandatory: table.rows[rowIndex].cells[14].children[0].checked,
                        ManagerApprovalRequired: table.rows[rowIndex].cells[15].children[0].checked,
                        Price: table.rows[rowIndex].cells[16].children[0].value,
                        FaceValue: table.rows[rowIndex].cells[17].children[0].value,
                        TaxInclusive: table.rows[rowIndex].cells[18].children[0].checked,
                        Taxpercent: table.rows[rowIndex].cells[19].children[0].value,
                        TaxId: table.rows[rowIndex].cells[20].children[0].options[selectedTaxIndex].id,
                        FinalPrice: table.rows[rowIndex].cells[21].children[0].value,
                        EffectivePrice: table.rows[rowIndex].cells[22].children[0].value,
                        Credits: table.rows[rowIndex].cells[23].children[0].value,
                        Courtesy: table.rows[rowIndex].cells[24].children[0].value,
                        Bonus: table.rows[rowIndex].cells[25].children[0].value,
                        Tickets: table.rows[rowIndex].cells[26].children[0].value,
                        Time: table.rows[rowIndex].cells[27].children[0].value,
                        TicketAllowed: table.rows[rowIndex].cells[28].children[0].checked,
                        Discount: table.rows[rowIndex].cells[29].children[0].value,
                        AllowPriceOverride: table.rows[rowIndex].cells[30].children[0].checked,
                        CardValidFor: table.rows[rowIndex].cells[31].children[0].value,
                        CardExpiryDate: table.rows[rowIndex].cells[32].children[0].value,
                        HSNSACCode: table.rows[rowIndex].cells[33].children[0].value,
                        TrxHeaderRemarksMandatory: table.rows[rowIndex].cells[34].children[0].checked,
                        InvokeCustomerRegistration: table.rows[rowIndex].cells[35].children[0].checked,
                        ExpiryDate: '10/10/2020',
                        StartDate: '10/10/2020'
                    });
                }
            }

            debugger
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("UpdateProducts", "product")',
                data: JSON.stringify({ products: items }),
                dataType: "json",
                success: function (data) {
                    notify('success','Success Message', 'Data Saved Successfully', () => {
                        location.reload();
                    });
                },
                error: function (e) {
                    notify('error','Error Message', 'Error in server');
                }
            });
        }
    }
    $(document).ready(function () {
        $('.dropdown-toggle').collapse({
            toggle: false
        });
    });
    $('.close').click(function () {
        location.reload();
    });
    $(':input').on('change', function () {
        $("#saveproduct").attr("disabled", false);
    });

    $("#newproductmodel").draggable({
        handle: ".modal-header"
    });

    function EditProduct(id) {
        $('#myModal').modal('show');
        //$('#modelBody').css({
        //    'left': '-40%',
        //    'width': 1000
        //});
        if (id != 0) {
            $('#modelBody').load('/Product/Edit', { "id": id });
            $('.modal-title').text('Edit Product');
        } else {
            $('#modelBody').load('/Product/Edit');
            $('.modal-title').text('New Product');
        }
    }
    function DeleteProduct(id) {
        if (id != 0) {
            if (confirm('Are you sure you want to delete this from database?')) {
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("DeleteProduct", "Product")',
                    data: { Id: id },
                    dataType: "json",
                    success: function (data) {
                        notify('delete', '', '', () => {
                            location.reload();
                        });
                    },
                    error: function (e) {
                        alert(e);
                    }
                });
            }

        }
    }

</script>
