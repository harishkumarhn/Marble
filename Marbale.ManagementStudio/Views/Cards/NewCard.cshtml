@model Marbale.BusinessObject.Cards.CardsModel
@{
    Layout = null;
}
<style>
    .nav-link {
        padding: 0.2rem 1rem;
    }

    .cardInlineItem {
        display: inline-table;
        margin: 0px 10px 0px 10px;
    }

    .newCardFont {
        font-size: 13px;
        font-weight: 600;
        font-family: system-ui;
    }

    .form-control, .modal-footer {
        padding: 0px 0px 0px 0px;
    }
    a {
        font-weight:800;
    }
</style>
<div class="modal-header">
    <h4 class="modal-title">New Card</h4>
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
</div>
<div class="modal-body newCardFont">
    @using (Html.BeginForm("InsertOrUpdateCards", "Cards", FormMethod.Post, new { id = "cardForm" }))
    {
    <div class="row">
        <div class="col-sm">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" role="tab" data-toggle="tab">Main</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div class="form-group row">
                    <table>
                        <tr>
                            <td>
                                <label>CardId:</label>
                            </td>
                            <td>@Html.TextBoxFor(m => m.CardId, new { @readonly = "readonly", @class = "form-control" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>CardNumber:</label>
                            </td>
                            <td>@Html.TextBoxFor(m => m.CardNumber, new { @class = "form-control"})
                                @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>IssueDate:</label>
                            </td>
                            <td>@Html.TextBoxFor(m => m.IssueDateP, new { @class = "form-control datepicker" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>FaceValue:</label>
                            </td>
                            <td>@Html.TextBoxFor(m => m.FaceValue, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FaceValue, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>Customer:</label>
                            </td>
                            <td>
                                  @Html.TextBoxFor(m => m.Customer, new { @class = "form-control" })
                            </td>
                        </tr>
                        <tr class="newCard">
                            <td>
                                <label>VIP Customer:</label>
                                @Html.CheckBoxFor(m => m.VIPCustomer, new { @class = "form-control cardInlineItem"})
                            </td>
                            <td>
                                <label>Valid:</label>
                                @Html.CheckBoxFor(m => m.ValidFlag, new { @class = "form-control cardInlineItem" })
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-sm">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" role="tab" data-toggle="tab">Value</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div class="form-group row">
                    <table>
                        <tr>
                            <td>
                                <label xfor="ex1">Credits:</label>
                            </td>
                            <td>@Html.TextBoxFor(m => m.Credits, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex2">Credit Plus:</label></td>
                            <td>@Html.TextBoxFor(m => m.CreditPlus, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CreditPlus, "", new { @class = "text-danger" })</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex3">Courtesy:</label></td>
                            <td>@Html.TextBoxFor(m => m.Courtesy, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Courtesy, "", new { @class = "text-danger" })</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex3">Bonus:</label></td>
                            <td>@Html.TextBoxFor(m => m.Bonus, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger" })</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex4">CreditsPlayed:</label></td>
                            <td>@Html.TextBoxFor(m => m.CreditsPlayed, new { @class = "form-control" })</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" role="tab" data-toggle="tab">Game Time/Refund/Expiry</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div class="form-group row">
                    <table>
                        <tr>
                            <td>
                                <label for="ex1">StartTime:</label></td>
                            <td>@Html.TextBoxFor(m => m.StartTime, new { @class = "form-control datepicker" })</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex2">Last Play time:</label></td>
                            <td>@Html.TextBoxFor(m => m.LastPlayTime, new { @class = "form-control datepicker"})</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex1">Expiry Date:</label></td>
                            <td>@Html.TextBoxFor(m => m.ExpiryDate, new { @class = "form-control datepicker" })</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex3">Refund Amount:</label></td>
                            <td>@Html.TextBoxFor(m => m.RefundAmount, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RefundAmount, "", new { @class = "text-danger" })</td>
                        </tr>
                        <tr>
                            <td>
                                <label for="ex2">Refund Date:</label></td>
                            <td>@Html.TextBoxFor(m => m.RefundDate, new { @class = "form-control datepicker" })</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-sm">
            <div class="row">
                <div class="col-sm">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" role="tab" data-toggle="tab">Ticket</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div class="form-group row">
                            <table>
                                <tr>
                                    <td>
                                        <label for="ex1">Ticket Count:</label></td>
                                    <td>@Html.TextBoxFor(m => m.TicketCount, new { @type = "number",@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.TicketCount, "", new { @class = "text-danger" })</td>
                                </tr>
                                <tr class="newcard">
                                    <td>
                                        <label for="ex3">Ticket Allowed:</label>
                                        @Html.CheckBoxFor(m => m.TicketAllowed, new { @class = "form-control cardInlineItem" })
                                    </td>
                                    <td>
                                        <label for="ex2">Real Ticket Mode:</label>@Html.CheckBoxFor(m => m.RealTicketMode, new { @class = "form-control cardInlineItem" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" role="tab" data-toggle="tab">Technical</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div class="form-group row">
                            <table>
                                <tr>
                                    <td>
                                        <label for="ex2">Tech Card Type:</label></td>
                                    <td>@Html.DropDownListFor(m => m.TechCardType, new SelectList((List<Marbale.BusinessObject.IdValue>)Session["TechCardType"], "Id", "Value"), new { @class = "form-control" })    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="ex3">Tech Game:</label></td>
                                    <td>@Html.TextBoxFor(m => m.TechGames, new { @class = "form-control" })</td>
                                </tr>
                                <tr class="newcard">
                                    <td> <label for="ex2">Timer Reset Card:</label>@Html.CheckBoxFor(m => m.TimerResetCard, new { @class = "form-control cardInlineItem" })</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top: -35px;">
        <div class="col-sm">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" role="tab" data-toggle="tab">Miscellaneous</a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div class="form-group row">
                    <div>
                        <div class="row" style="margin-top: 5px">
                            <div class="col-sm-3">
                                <label for="ex1">Last Updated Time:</label>
                            </div>
                            <div class="col-sm-3">@Html.TextBoxFor(m => m.LastUpdatedTime, new { @class = "form-control datepicker cardInlineItem" })</div>
                            <div class="col-sm-3">
                                <label for="ex3">Last Updated By:</label>
                            </div>
                            <div class="col-sm-3">@Html.TextBoxFor(m => m.LastUpdatedBy, new { @class = "form-control cardInlineItem" }) </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                <label for="ex2">Notes:</label></div>
                            <div class="col-sm-8" style="margin-left: 10px">@Html.TextAreaFor(m => m.Note, 2, 10, new { @class = "form-control" }) </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    }
    <div class="modal-footer">
        <button id="update" type="submit" class="btn btn-primary" onclick="Save(this)">Save</button>
        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.modal-body').css({
                'height': '600px',
                'padding-bottom': '0px'
            });
            $(document).off('focusin.modal');
        })
        $(function () {
            $(".datepicker").datepicker({
                changeMonth: true,
                changeYear: true,
                "setDate": new Date()
            });
        });
        $('.close').click(function () {
            location.reload();
        });
        $('.check-boxs').change(function () {
            if ($('#TimerResetCard').is(':checked')) {
                $("#TechCardType").prop("disabled", true);
            }
            else {
                $("#TechCardType").prop("disabled", false);
            }

        });
        function Save(btnClicked) {
            var $form = $('#cardForm');
            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                },
                success: function (response) {
                    //do something with response
                    alert('Data saved');

                }
            });
            return false;// if it's a link to prevent post
        }
    </script>
